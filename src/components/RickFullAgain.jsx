/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/RickFullAgain.glb -o src/components/RickFullAgain.jsx -k -K -r public 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function RickFullAgain({
  animation="Armature|Clip1Bod",
  ...props}) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/RickFullAgain.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

    useEffect(() => {
       console.log('Rick Loaded Materials:', materials);
      actions[animation]?.reset().fadeIn(0.24).play();
      return () => actions?.[animation]?.fadeOut(0.24);
    }, [animation]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="RootNode">
          <group name="Point001" position={[168.6, 45.556, -253.403]} scale={100} />
          <group name="Point" position={[0, 132.168, 168.489]} scale={100} />
          <group name="Armature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Riot} />
          </group>
          <skinnedMesh name="Cube" geometry={nodes.Cube.geometry} material={materials.Material} skeleton={nodes.Cube.skeleton} morphTargetDictionary={nodes.Cube.morphTargetDictionary} morphTargetInfluences={nodes.Cube.morphTargetInfluences} scale={100} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/RickFullAgain.glb')
