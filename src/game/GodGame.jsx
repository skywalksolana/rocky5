/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/god.glb -o src/components/God.jsx -k -K -r public 
Author: Filip Bakker (https://sketchfab.com/fbakker.6)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fb-aquaman-orange-02f60aacdd114b13896d4732e54ad836
Title: FB Aquaman Orange
*/

import React, { useEffect, useRef } from 'react'
import { useFrame, useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations,Text } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function GodGame({
    name="Player",
  animation="Twist_Dance",
  ...props
}) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/godNew.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)


    useEffect(() => {
      //  console.log('Rick Loaded Materials:', materials);
      actions[animation]?.reset().fadeIn(0.24).play();
      return () => actions?.[animation]?.fadeOut(0.24);
    }, [animation]);
    
      const textRef = useRef();
    
  useFrame(({ camera }) => {

    if (textRef.current) {

      textRef.current.lookAt(camera.position);

    }

  });
  return (
    <group ref={group} {...props} dispose={null}>
         <group ref={textRef}>

<Text
    position-y={3.8}
    fontSize={0.5}
    anchorX="center"
    anchorY="middle"
    font="fonts/PaytoneOne-Regular.ttf"
  >
    {name}
    <meshBasicMaterial color="white" />
  </Text>
  <Text
    position-y={3.78}
    position-x={0.02}
    position-z={-0.02}
    fontSize={0.5}
    anchorX="center"
    anchorY="middle"
    font="fonts/PaytoneOne-Regular.ttf"
  >
    {name}

    <meshBasicMaterial color="black" />

  </Text>

</group>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.017}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="GLTF_created_0">
                <primitive object={nodes.GLTF_created_0_rootJoint} />
                <group name="_102_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_102" />
                </group>
                <group name="_104_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_104" />
                </group>
                <group name="_105_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_105" />
                </group>
                <group name="_106_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_106" />
                </group>
                <group name="_107_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_107" />
                </group>
                <group name="_108_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_108" />
                </group>
                <group name="_109_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_109" />
                </group>
                <group name="_111_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_111" />
                </group>
                <group name="_112_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_112" />
                </group>
                <group name="_114_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_114" />
                </group>
                <group name="_115_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_115" />
                </group>
                <group name="_117_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_117" />
                </group>
                <group name="_118_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_118" />
                </group>
                <group name="_119_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_119" />
                </group>
                <group name="_120_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_120" />
                </group>
                <group name="_122_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_122" />
                </group>
                <group name="_123_correction" rotation={[-Math.PI / 2, 0, 0]}>
                  <group name="_123" />
                </group>
                <skinnedMesh name="Object_108" geometry={nodes.Object_108.geometry} material={materials.material_0} skeleton={nodes.Object_108.skeleton} />
                <skinnedMesh name="Object_111" geometry={nodes.Object_111.geometry} material={materials.material_1} skeleton={nodes.Object_111.skeleton} />
                <skinnedMesh name="Object_114" geometry={nodes.Object_114.geometry} material={materials.material_2} skeleton={nodes.Object_114.skeleton} />
                <skinnedMesh name="Object_117" geometry={nodes.Object_117.geometry} material={materials.material_3} skeleton={nodes.Object_117.skeleton} />
                <skinnedMesh name="Object_120" geometry={nodes.Object_120.geometry} material={materials.material_4} skeleton={nodes.Object_120.skeleton} />
                <skinnedMesh name="Object_123" geometry={nodes.Object_123.geometry} material={materials.material_5} skeleton={nodes.Object_123.skeleton} />
                <skinnedMesh name="Object_126" geometry={nodes.Object_126.geometry} material={materials.material_6} skeleton={nodes.Object_126.skeleton} />
                <skinnedMesh name="Object_129" geometry={nodes.Object_129.geometry} material={materials.material_7} skeleton={nodes.Object_129.skeleton} />
                <skinnedMesh name="Object_132" geometry={nodes.Object_132.geometry} material={materials.material_8} skeleton={nodes.Object_132.skeleton} />
                <skinnedMesh name="Object_135" geometry={nodes.Object_135.geometry} material={materials.material_9} skeleton={nodes.Object_135.skeleton} />
                <skinnedMesh name="Object_138" geometry={nodes.Object_138.geometry} material={materials.material_10} skeleton={nodes.Object_138.skeleton} />
                <skinnedMesh name="Object_141" geometry={nodes.Object_141.geometry} material={materials.material_11} skeleton={nodes.Object_141.skeleton} />
                <skinnedMesh name="Object_144" geometry={nodes.Object_144.geometry} material={materials.material_12} skeleton={nodes.Object_144.skeleton} />
                <skinnedMesh name="Object_147" geometry={nodes.Object_147.geometry} material={materials.material_13} skeleton={nodes.Object_147.skeleton} />
                <skinnedMesh name="Object_150" geometry={nodes.Object_150.geometry} material={materials.material_14} skeleton={nodes.Object_150.skeleton} />
                <skinnedMesh name="Object_153" geometry={nodes.Object_153.geometry} material={materials.material_15} skeleton={nodes.Object_153.skeleton} />
                <skinnedMesh name="Object_156" geometry={nodes.Object_156.geometry} material={materials.material_16} skeleton={nodes.Object_156.skeleton} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/godNew.glb',"draco/gltf/")
